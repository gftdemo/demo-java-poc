\npackage com.scalesec.vulnado;\n\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\n\nimport io.jsonwebtoken.Jwts;\nimport io.jsonwebtoken.security.Keys;\n\npublic class User {\n\n    private final String id;\n    private final String username;\n    private final String hashedPassword;\n\n    public User(String id, String username, String hashedPassword) {\n        this.id = id;\n        this.username = username;\n        this.hashedPassword = hashedPassword;\n    }\n\n    public String token(String secret) {\n        SecretKey key = Keys.hmacShaKeyFor(secret.getBytes());\n        return Jwts.builder().setSubject(this.username).signWith(key).compact();\n    }\n\n    public static void assertAuth(String secret, String token) {\n        try {\n            SecretKey key = Keys.hmacShaKeyFor(secret.getBytes());\n            Jwts.parser()\n                    .setSigningKey(key)\n                    .parseClaimsJws(token);\n        } catch (Exception e) {\n            throw new Unauthorized(e.getMessage());\n        }\n    }\n\n    public static User fetch(String un) {\n        Connection cxn = Postgres.connection();\n        PreparedStatement stmt = null;\n        User user = null;\n        try {\n            stmt = cxn.prepareStatement(\"select * from users where username = ? limit 1\");\n            stmt.setString(1, un);\n            ResultSet rs = stmt.executeQuery();\n            if (rs.next()) {\n                String user_id = rs.getString(\"user_id\");\n                String username = rs.getString(\"username\");\n                String password = rs.getString(\"password\");\n                user = new User(user_id, username, password);\n            }\n        } catch (SQLException e) {\n            throw new RuntimeException(e);\n        } finally {\n            try {\n                stmt.close();\n            } catch (SQLException e) {\n                // ignore\n            }\n            try {\n                cxn.close();\n            } catch (SQLException e) {\n                // ignore\n            }\n        }\n        return user;\n    }\n}\n