\npackage com.scalesec.vulnado;\n\nimport org.springframework.http.HttpStatus;\nimport org.springframework.web.bind.annotation.*;\nimport org.springframework.beans.factory.annotation.*;\nimport org.springframework.boot.autoconfigure.*;\nimport java.util.List;\nimport java.io.Serializable;\n\n@RestController\n@EnableAutoConfiguration\npublic class CommentsController {\n\n  @Value(\"${app.secret}\")\n  private String secret;\n\n  @CrossOrigin(origins = \"*\")\n  @GetMapping(\"/comments\")\n  List\u003cComment\u003e comments(@RequestHeader(value=\"x-auth-token\") String token) {\n    User.assertAuth(secret, token);\n    return Comment.fetch_all();\n  }\n\n  @CrossOrigin(origins = \"*\")\n  @PostMapping(\"/comments\")\n  Comment createComment(@RequestHeader(value=\"x-auth-token\") String token, @RequestBody CommentRequest input) {\n    return Comment.create(input.username, input.body);\n  }\n\n  @CrossOrigin(origins = \"*\")\n  @DeleteMapping(\"/comments/{id}\")\n  Boolean deleteComment(@RequestHeader(value=\"x-auth-token\") String token, @PathVariable(\"id\") String id) {\n    return Comment.delete(id);\n  }\n}\n\nclass CommentRequest implements Serializable {\n\n  public String username;\n  public String body;\n}\n\n@ResponseStatus(HttpStatus.BAD_REQUEST)\nclass BadRequest extends RuntimeException {\n\n  public BadRequest(String exception) {\n    super(exception);\n  }\n}\n\n@ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)\nclass ServerError extends RuntimeException {\n\n  public ServerError(String exception) {\n    super(exception);\n  }\n}\n